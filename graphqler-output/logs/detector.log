[INFO][2024-11-14 15:10:17][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "8OXV2FUY3A", name: "XVN610SQU3", type: "JOSNLKCY68"}
    page: 65
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:17][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:17][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:17][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:17][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "<script>alert(1)</script>", name: "<script>alert(1)</script>", type: "<script>alert(1)</script>"}
    page: 15
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:18][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:18][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:18][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "5X5K83XBIT", name: "Q9ZY3MM5E9", type: "FOD34TKUR5"}
    page: 67
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:18][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:18][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:18][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "FFUYP0S8PF", name: "aaa ' OR 1=1--", type: "61Q1KWVFWP"}
    page: 20
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:18][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:18][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:18][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:18][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "../../../../etc/passwd", name: "../../../../etc/passwd", type: "../../../../etc/passwd"}
    page: 65
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:19][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:19][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:19][detector]:Non-aliased Payload:
{
  locations(
    filter: {dimension: "C235VRIY0L", name: "CBO8834AHS", type: "6BSD4GF4W1"}
    page: 7
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      created
    }
  }
}
[INFO][2024-11-14 15:10:19][detector]:[200]Non-aliased Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:19][detector]:Aliased Payload:
{
  s: locations(
    filter: {dimension: "2HMRCBOI4B", name: "IOJEA9ZVOS", type: "B6E4UQECXS"}
    page: 100
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:19][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:19][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-14 15:10:19][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:19][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:19][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:19][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:19][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:19][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[INFO][2024-11-14 15:10:20][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "6S3QHNO0VI", name: "B3TROPNTKM"}, page: 91) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        origin {
                          id
                          name
                          type
                          dimension
                          created
                        }
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:20][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:20][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:20][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:20][detector]:[Detector] Payload:
{
  episodes(
    filter: {episode: "<script>alert(1)</script>", name: "<script>alert(1)</script>"}
    page: 96
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:20][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:20][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:20][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "XL2T2AS9G3", name: "GGL58KLZP9"}, page: 2) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:21][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:21][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:21][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "3M41CRCFVI", name: "aaa ' OR 1=1--"}, page: 68) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        origin {
                          id
                          name
                          type
                          dimension
                          created
                        }
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:21][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:21][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:21][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:21][detector]:[Detector] Payload:
{
  episodes(
    filter: {episode: "../../../../etc/passwd", name: "../../../../etc/passwd"}
    page: 62
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:21][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:21][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:21][detector]:Non-aliased Payload:
{
  episodes(filter: {episode: "FNTU9XGT0J", name: "GLPSPJKXBC"}, page: 91) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      created
    }
  }
}
[INFO][2024-11-14 15:10:22][detector]:[200]Non-aliased Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:22][detector]:Aliased Payload:
{
  s: episodes(filter: {episode: "WM3U3DBOK1", name: "XCGUJNYDLR"}, page: 57) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:22][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:22][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-14 15:10:22][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:22][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:22][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:22][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:22][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:22][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[INFO][2024-11-14 15:10:23][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "UEK2PD63J7", name: "765F3MUBA0", species: "PSVQ5T4PTY", status: "HUAKB2JQJA", type: "3HRKTNV91K"}
    page: 100
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:23][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:23][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:23][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:23][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "<script>alert(1)</script>", name: "<script>alert(1)</script>", species: "<script>alert(1)</script>", status: "<script>alert(1)</script>", type: "<script>alert(1)</script>"}
    page: 41
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:23][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:23][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:23][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "J661KPP37W", name: "R3C09W4Q92", species: "41Y3HTGZ66", status: "5R95UJDEEU", type: "ELB8EEMYWQ"}
    page: 14
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:23][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:23][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:23][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "0JQ60J2CJZ", name: "aaa ' OR 1=1--", species: "7XDLBA8B8A", status: "6CTLITGSCV", type: "TMS18JWA60"}
    page: 54
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:23][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:23][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:23][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:23][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "../../../../etc/passwd", name: "../../../../etc/passwd", species: "../../../../etc/passwd", status: "../../../../etc/passwd", type: "../../../../etc/passwd"}
    page: 67
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:24][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:24][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:24][detector]:Non-aliased Payload:
{
  characters(
    filter: {gender: "ZO1C4DF1TK", name: "26JR36WMCF", species: "11SXCEW8V1", status: "L0TGIY364X", type: "B7KIB10F3J"}
    page: 64
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      image
      created
    }
  }
}
[INFO][2024-11-14 15:10:24][detector]:[200]Non-aliased Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:24][detector]:Aliased Payload:
{
  s: characters(
    filter: {gender: "86H308G8RH", name: "BI4XOOFJ4W", species: "6J9KEUSZA0", status: "4RCW32LW8J", type: "NZ5AZY2CC4"}
    page: 29
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-14 15:10:24][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-14 15:10:24][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-14 15:10:24][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:24][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:24][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:24][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:24][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:24][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:24][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:24][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:24][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:24][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:24][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:24][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:25][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:25][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:26][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:26][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:27][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:27][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:27][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:27][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:27][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:27][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-14 15:10:28][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-14 15:10:28][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[INFO][2024-11-14 15:10:28][detector]:[Detector] Payload:
{
  character(id: "BXU3JJ7VRI") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:28][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:28][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:28][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:28][detector]:[Detector] Payload:
{
  character(id: "N05X3V22V4") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:29][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/N05X3V22V4","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:29][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/N05X3V22V4', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:29][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:29][detector]:[Detector] Payload:
{
  character(id: "OTKL7D2YFJ") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:29][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/OTKL7D2YFJ","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:29][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/OTKL7D2YFJ', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:29][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:29][detector]:[Detector] Payload:
{
  character(id: "B32LXXZ686") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:29][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:29][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:29][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:29][detector]:[Detector] Payload:
{
  character(id: "ZOC88DNTBV") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:30][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/ZOC88DNTBV","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:30][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/ZOC88DNTBV', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:30][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:30][detector]:Non-aliased Payload:
{
  character(id: "NC0L2GHK4X") {
    id
    name
    status
    species
    type
    gender
    image
    created
  }
}
[INFO][2024-11-14 15:10:30][detector]:[200]Non-aliased Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/NC0L2GHK4X","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:30][detector]:Aliased Payload:
{
  s: character(id: "VEKON74VV4") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:30][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/VEKON74VV4","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:30][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:31][detector]:[Detector] Payload:
{
  episode(id: "E0IU4J7OQ3") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:31][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:31][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:31][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:31][detector]:[Detector] Payload:
{
  episode(id: "MK6BY0QBEM") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:31][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/MK6BY0QBEM","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:31][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/MK6BY0QBEM', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:31][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:31][detector]:[Detector] Payload:
{
  episode(id: "QCULCD7OFT") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:32][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/QCULCD7OFT","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:32][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/QCULCD7OFT', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:32][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:32][detector]:[Detector] Payload:
{
  episode(id: "1PTFV5G24X") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:32][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:32][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:32][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:32][detector]:[Detector] Payload:
{
  episode(id: "KN44121SSU") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:32][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/KN44121SSU","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:32][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/KN44121SSU', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:32][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:32][detector]:Non-aliased Payload:
{
  episode(id: "JH14FZS5YR") {
    id
    name
    air_date
    episode
    created
  }
}
[INFO][2024-11-14 15:10:33][detector]:[200]Non-aliased Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/JH14FZS5YR","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:33][detector]:Aliased Payload:
{
  s: episode(id: "DB8JETZH2B") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:33][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/DB8JETZH2B","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:33][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:34][detector]:[Detector] Payload:
{
  location(id: "PNQVVG63ZW") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:34][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:34][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:34][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:34][detector]:[Detector] Payload:
{
  location(id: "MUA672IVKI") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:34][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/MUA672IVKI","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:34][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/MUA672IVKI', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:34][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:34][detector]:[Detector] Payload:
{
  location(id: "EC1ZCGS7GO") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:34][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/EC1ZCGS7GO","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:34][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/EC1ZCGS7GO', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-14 15:10:34][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:34][detector]:[Detector] Payload:
{
  location(id: "25HTAW27P0") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:34][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-14 15:10:34][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-14 15:10:34][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:35][detector]:[Detector] Payload:
{
  location(id: "5LTCOMU99O") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:35][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/5LTCOMU99O","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"5LTCOMU99O\" at path \"id\" for model \"Location\""}}}}]}
[INFO][2024-11-14 15:10:35][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/5LTCOMU99O', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "5LTCOMU99O" at path "id" for model "Location"'}}}}]
[INFO][2024-11-14 15:10:35][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:35][detector]:Non-aliased Payload:
{
  location(id: "MDQ2R8M9DQ") {
    id
    name
    type
    dimension
    created
  }
}
[INFO][2024-11-14 15:10:35][detector]:[200]Non-aliased Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/MDQ2R8M9DQ","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:35][detector]:Aliased Payload:
{
  s: location(id: "JK01WKPAU9") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-14 15:10:36][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/JK01WKPAU9","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-14 15:10:36][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-14 15:10:36][detector]:[Detector] Payload:
{
  __schema {
    queryType {
      name
    }
    mutationType {
      name
    }
    subscriptionType {
      name
    }
  }
}
[INFO][2024-11-14 15:10:36][detector]:[200]Response: {"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null}}}
[INFO][2024-11-14 15:10:36][detector]:Vulnerable to Introspection Enabled
[INFO][2024-11-14 15:10:36][detector]:Potentially vulnerable to Introspection Enabled
[INFO][2024-11-14 15:10:36][detector]:Detector Introspection Enabled finished detecting - is_vulnerable: True - potentially_vulnerable: True
[INFO][2024-11-14 15:10:36][detector]:[Detector] Payload:
{
  episodeabc {
    id
  }
}
[INFO][2024-11-14 15:10:36][detector]:[400]Response: {"errors":[{"message":"Cannot query field \"episodeabc\" on type \"Query\". Did you mean \"episode\", \"episodes\", or \"episodesByIds\"?","locations":[{"line":2,"column":3}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED"}}]}
[INFO][2024-11-14 15:10:36][detector]:Got errors: [{'message': 'Cannot query field "episodeabc" on type "Query". Did you mean "episode", "episodes", or "episodesByIds"?', 'locations': [{'line': 2, 'column': 3}], 'extensions': {'code': 'GRAPHQL_VALIDATION_FAILED'}}]
[INFO][2024-11-14 15:10:36][detector]:Vulnerable to Field Suggestions Enabled
[INFO][2024-11-14 15:10:36][detector]:Potentially vulnerable to Field Suggestions Enabled
[INFO][2024-11-14 15:10:36][detector]:Detector Field Suggestions Enabled finished detecting - is_vulnerable: True - potentially_vulnerable: True
[INFO][2024-11-17 21:55:38][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "7TRJD7IDQV", name: "2061RUIJMP", type: "PYGFSLQ6U8"}
    page: 88
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:39][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:39][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:39][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:39][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "<script>alert(1)</script>", name: "<script>alert(1)</script>", type: "<script>alert(1)</script>"}
    page: 13
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:39][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:39][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:39][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "KHVBI38MK9", name: "NYTOWFC04Q", type: "9DJJ2AGVCP"}
    page: 81
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:39][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:39][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:39][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "XSA7IPZ42E", name: "aaa ' OR 1=1--", type: "R5YXNU0GE2"}
    page: 88
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:39][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:39][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:39][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:39][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "../../../../etc/passwd", name: "../../../../etc/passwd", type: "../../../../etc/passwd"}
    page: 12
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:39][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:39][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:39][detector]:Non-aliased Payload:
{
  locations(
    filter: {dimension: "ERAI7JYJL5", name: "ROSPWMS9V4", type: "UHC38QQ4FG"}
    page: 36
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      created
    }
  }
}
[INFO][2024-11-17 21:55:40][detector]:[200]Non-aliased Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:40][detector]:Aliased Payload:
{
  s: locations(
    filter: {dimension: "WFW6UG4AYD", name: "4Q8K4708W9", type: "TJ1NBHLC8R"}
    page: 53
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:40][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:40][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-17 21:55:40][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:40][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:40][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:40][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:40][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:40][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[INFO][2024-11-17 21:55:40][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "10WDEUHGQJ", name: "DBNITMOS5V"}, page: 45) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        origin {
                          id
                          name
                          type
                          dimension
                          created
                        }
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:41][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:41][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:41][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:41][detector]:[Detector] Payload:
{
  episodes(
    filter: {episode: "<script>alert(1)</script>", name: "<script>alert(1)</script>"}
    page: 23
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:41][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:41][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:41][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "4808WAZG0X", name: "32PKPJ4NS8"}, page: 51) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:41][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:41][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:41][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "TLOIZWZSOD", name: "aaa ' OR 1=1--"}, page: 66) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        origin {
                          id
                          name
                          type
                          dimension
                          created
                        }
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:41][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:41][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:41][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:41][detector]:[Detector] Payload:
{
  episodes(
    filter: {episode: "../../../../etc/passwd", name: "../../../../etc/passwd"}
    page: 90
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:42][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:42][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:42][detector]:Non-aliased Payload:
{
  episodes(filter: {episode: "QLBNBZX3ZD", name: "Q4VYZK7LZL"}, page: 3) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      created
    }
  }
}
[INFO][2024-11-17 21:55:42][detector]:[200]Non-aliased Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:42][detector]:Aliased Payload:
{
  s: episodes(filter: {episode: "8YH4RTVT4R", name: "XOVTQMM1SL"}, page: 39) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:42][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:42][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-17 21:55:42][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:42][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:42][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:42][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:42][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:42][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[INFO][2024-11-17 21:55:43][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "D3T24XO1P3", name: "LT3PBPUVTX", species: "S61XABW5TQ", status: "4PJS4HZSTS", type: "AS4WNT3G7N"}
    page: 48
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:43][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:43][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:43][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:43][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "<script>alert(1)</script>", name: "<script>alert(1)</script>", species: "<script>alert(1)</script>", status: "<script>alert(1)</script>", type: "<script>alert(1)</script>"}
    page: 6
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:43][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:43][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:43][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "SROALJHDP8", name: "7SD4LU1QT4", species: "0E4OBU7P8O", status: "A2VLR48SSC", type: "BOP52ZKPYN"}
    page: 6
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:43][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:43][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:43][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "TGU3PQW8Y3", name: "aaa ' OR 1=1--", species: "J3U7IYAWOD", status: "KW59IF9UGF", type: "I5YDSABLG6"}
    page: 67
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:43][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:43][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:43][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:43][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "../../../../etc/passwd", name: "../../../../etc/passwd", species: "../../../../etc/passwd", status: "../../../../etc/passwd", type: "../../../../etc/passwd"}
    page: 44
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:44][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:44][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:44][detector]:Non-aliased Payload:
{
  characters(
    filter: {gender: "Y5CH7NRATI", name: "JZ53T5LL06", species: "2KG19XR1V2", status: "8BL28UK68Y", type: "ECSJ3PGM8D"}
    page: 11
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      image
      created
    }
  }
}
[INFO][2024-11-17 21:55:44][detector]:[200]Non-aliased Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:44][detector]:Aliased Payload:
{
  s: characters(
    filter: {gender: "ZPLR8U1IFR", name: "SPC7VOXS0G", species: "GCJ5NX9ISB", status: "XJB2VZ1NTC", type: "HRRDMBCL8S"}
    page: 50
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:55:44][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:55:44][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:44][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:44][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:45][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:45][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:45][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:45][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:45][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:45][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:45][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:45][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:45][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:45][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:45][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:45][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:46][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:46][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:55:47][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:55:47][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[INFO][2024-11-17 21:55:48][detector]:[Detector] Payload:
{
  character(id: "3EHOJCNF2R") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:48][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:48][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:48][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:48][detector]:[Detector] Payload:
{
  character(id: "XKLPH0FUFM") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:48][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/XKLPH0FUFM","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:48][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/XKLPH0FUFM', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:55:48][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:48][detector]:[Detector] Payload:
{
  character(id: "CTZ6J1YARZ") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:48][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/CTZ6J1YARZ","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:48][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/CTZ6J1YARZ', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:55:48][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:48][detector]:[Detector] Payload:
{
  character(id: "ZJSGEHZTQ0") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:48][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:48][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:48][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:48][detector]:[Detector] Payload:
{
  character(id: "RETKBUO79L") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:49][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/RETKBUO79L","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:49][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/RETKBUO79L', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:55:49][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:49][detector]:Non-aliased Payload:
{
  character(id: "NO687PWV0K") {
    id
    name
    status
    species
    type
    gender
    image
    created
  }
}
[INFO][2024-11-17 21:55:49][detector]:[200]Non-aliased Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/NO687PWV0K","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:49][detector]:Aliased Payload:
{
  s: character(id: "1NJQSIWSEE") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:49][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/1NJQSIWSEE","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"1NJQSIWSEE\" at path \"id\" for model \"Character\""}}}}]}
[INFO][2024-11-17 21:55:49][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:50][detector]:[Detector] Payload:
{
  episode(id: "5B01F38HYB") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:50][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:50][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:50][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:50][detector]:[Detector] Payload:
{
  episode(id: "49UWU5AKLZ") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:50][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/49UWU5AKLZ","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"49UWU5AKLZ\" at path \"id\" for model \"Episode\""}}}}]}
[INFO][2024-11-17 21:55:50][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/49UWU5AKLZ', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "49UWU5AKLZ" at path "id" for model "Episode"'}}}}]
[INFO][2024-11-17 21:55:50][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:50][detector]:[Detector] Payload:
{
  episode(id: "52IU1B62X5") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:50][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/52IU1B62X5","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"52IU1B62X5\" at path \"id\" for model \"Episode\""}}}}]}
[INFO][2024-11-17 21:55:50][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/52IU1B62X5', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "52IU1B62X5" at path "id" for model "Episode"'}}}}]
[INFO][2024-11-17 21:55:50][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:50][detector]:[Detector] Payload:
{
  episode(id: "Z8G6H26NZ9") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:51][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:51][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:51][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:51][detector]:[Detector] Payload:
{
  episode(id: "G3FVQUDVV4") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:51][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/G3FVQUDVV4","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:51][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/G3FVQUDVV4', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:55:51][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:51][detector]:Non-aliased Payload:
{
  episode(id: "99LD8TGIBS") {
    id
    name
    air_date
    episode
    created
  }
}
[INFO][2024-11-17 21:55:51][detector]:[200]Non-aliased Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/99LD8TGIBS","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"99LD8TGIBS\" at path \"id\" for model \"Episode\""}}}}]}
[INFO][2024-11-17 21:55:51][detector]:Aliased Payload:
{
  s: episode(id: "V618TG5GE5") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:51][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/V618TG5GE5","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:52][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:52][detector]:[Detector] Payload:
{
  location(id: "ZVPSX51DT0") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:52][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:52][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:52][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:52][detector]:[Detector] Payload:
{
  location(id: "RAX0UNVKG8") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:52][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/RAX0UNVKG8","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:52][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/RAX0UNVKG8', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:55:52][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:52][detector]:[Detector] Payload:
{
  location(id: "IPAL4O9XT7") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:53][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/IPAL4O9XT7","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:53][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/IPAL4O9XT7', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:55:53][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:53][detector]:[Detector] Payload:
{
  location(id: "M6QYUL6P3U") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:53][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:55:53][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:55:53][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:53][detector]:[Detector] Payload:
{
  location(id: "2DYFR296N9") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:53][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/2DYFR296N9","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"2DYFR296N9\" at path \"id\" for model \"Location\""}}}}]}
[INFO][2024-11-17 21:55:53][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/2DYFR296N9', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "2DYFR296N9" at path "id" for model "Location"'}}}}]
[INFO][2024-11-17 21:55:53][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:53][detector]:Non-aliased Payload:
{
  location(id: "BEPQMCJOVG") {
    id
    name
    type
    dimension
    created
  }
}
[INFO][2024-11-17 21:55:53][detector]:[200]Non-aliased Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/BEPQMCJOVG","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:53][detector]:Aliased Payload:
{
  s: location(id: "GY70BPQ0C4") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:55:53][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/GY70BPQ0C4","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:55:53][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:55:53][detector]:[Detector] Payload:
{
  __schema {
    queryType {
      name
    }
    mutationType {
      name
    }
    subscriptionType {
      name
    }
  }
}
[INFO][2024-11-17 21:55:54][detector]:[200]Response: {"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null}}}
[INFO][2024-11-17 21:55:54][detector]:Vulnerable to Introspection Enabled
[INFO][2024-11-17 21:55:54][detector]:Potentially vulnerable to Introspection Enabled
[INFO][2024-11-17 21:55:54][detector]:Detector Introspection Enabled finished detecting - is_vulnerable: True - potentially_vulnerable: True
[INFO][2024-11-17 21:55:54][detector]:[Detector] Payload:
{
  locationabc {
    id
  }
}
[INFO][2024-11-17 21:55:54][detector]:[400]Response: {"errors":[{"message":"Cannot query field \"locationabc\" on type \"Query\". Did you mean \"location\", \"locations\", or \"locationsByIds\"?","locations":[{"line":2,"column":3}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED"}}]}
[INFO][2024-11-17 21:55:54][detector]:Got errors: [{'message': 'Cannot query field "locationabc" on type "Query". Did you mean "location", "locations", or "locationsByIds"?', 'locations': [{'line': 2, 'column': 3}], 'extensions': {'code': 'GRAPHQL_VALIDATION_FAILED'}}]
[INFO][2024-11-17 21:55:54][detector]:Vulnerable to Field Suggestions Enabled
[INFO][2024-11-17 21:55:54][detector]:Potentially vulnerable to Field Suggestions Enabled
[INFO][2024-11-17 21:55:54][detector]:Detector Field Suggestions Enabled finished detecting - is_vulnerable: True - potentially_vulnerable: True
[INFO][2024-11-17 21:57:03][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "AFKMK6TTHQ", name: "S27TAOGC0W", type: "O96DOWJ8UE"}
    page: 10
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:03][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:03][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:03][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:03][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "<script>alert(1)</script>", name: "<script>alert(1)</script>", type: "<script>alert(1)</script>"}
    page: 35
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:03][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:03][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:03][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "BCP2CH5M9F", name: "90H7WSRXML", type: "0WD3T6ACH4"}
    page: 86
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:03][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:03][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:03][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "56UY2EDQ07", name: "aaa ' OR 1=1--", type: "ELALNAT0BQ"}
    page: 21
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:03][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:03][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:03][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:03][detector]:[Detector] Payload:
{
  locations(
    filter: {dimension: "../../../../etc/passwd", name: "../../../../etc/passwd", type: "../../../../etc/passwd"}
    page: 27
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:04][detector]:[200]Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:04][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:04][detector]:Non-aliased Payload:
{
  locations(
    filter: {dimension: "QDQT7FSZLS", name: "74QHC1HJ22", type: "JDVM79FG4P"}
    page: 100
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      created
    }
  }
}
[INFO][2024-11-17 21:57:04][detector]:[200]Non-aliased Response: {"data":{"locations":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:04][detector]:Aliased Payload:
{
  s: locations(
    filter: {dimension: "LQ3RRS2SAT", name: "XGPI1LU9HC", type: "RV0U6H4GRD"}
    page: 64
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:04][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:04][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-17 21:57:04][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:04][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:04][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:04][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:04][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:04][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[INFO][2024-11-17 21:57:05][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "2ZMZ4X24UK", name: "F2YOUY3PW2"}, page: 69) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        origin {
                          id
                          name
                          type
                          dimension
                          created
                        }
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:05][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:05][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:05][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:05][detector]:[Detector] Payload:
{
  episodes(
    filter: {episode: "<script>alert(1)</script>", name: "<script>alert(1)</script>"}
    page: 47
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:05][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:05][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:05][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "FWJXATE9EA", name: "ZH77R5EMBG"}, page: 57) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:05][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:05][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:05][detector]:[Detector] Payload:
{
  episodes(filter: {episode: "6FFWVZKBGQ", name: "aaa ' OR 1=1--"}, page: 86) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      residents {
                        id
                        name
                        status
                        species
                        type
                        gender
                        origin {
                          id
                          name
                          type
                          dimension
                          created
                        }
                        image
                        episode {
                          id
                          name
                          air_date
                          episode
                          created
                        }
                        created
                      }
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:06][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:06][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:06][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:06][detector]:[Detector] Payload:
{
  episodes(
    filter: {episode: "../../../../etc/passwd", name: "../../../../etc/passwd"}
    page: 72
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:06][detector]:[200]Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:06][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:06][detector]:Non-aliased Payload:
{
  episodes(filter: {episode: "3425F3849I", name: "6S2KHVWON6"}, page: 16) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      created
    }
  }
}
[INFO][2024-11-17 21:57:06][detector]:[200]Non-aliased Response: {"data":{"episodes":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:06][detector]:Aliased Payload:
{
  s: episodes(filter: {episode: "QCHJYQM2PG", name: "K2MVE6KSPO"}, page: 65) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:06][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:06][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-17 21:57:06][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:06][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:06][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:06][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:06][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:06][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[INFO][2024-11-17 21:57:07][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "7UBMUJX4VL", name: "OV90GT5ZYF", species: "SZK2E3WTJ9", status: "DQZ308R4S2", type: "IRXZLTF61O"}
    page: 87
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:07][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:07][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:07][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:07][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "<script>alert(1)</script>", name: "<script>alert(1)</script>", species: "<script>alert(1)</script>", status: "<script>alert(1)</script>", type: "<script>alert(1)</script>"}
    page: 77
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:07][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:07][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:07][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "K636R1L3IA", name: "5D48TSY1M3", species: "I2GM70YI9O", status: "N1JJKP4SMQ", type: "INAMFMOCTG"}
    page: 15
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:07][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:07][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:08][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "DQCWVFK6X3", name: "aaa ' OR 1=1--", species: "WE52PB06UT", status: "XJ8SPM6EH9", type: "6562WGDKQA"}
    page: 42
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:08][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:08][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:08][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:08][detector]:[Detector] Payload:
{
  characters(
    filter: {gender: "../../../../etc/passwd", name: "../../../../etc/passwd", species: "../../../../etc/passwd", status: "../../../../etc/passwd", type: "../../../../etc/passwd"}
    page: 50
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:08][detector]:[200]Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:08][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:08][detector]:Non-aliased Payload:
{
  characters(
    filter: {gender: "D1ZIPZAIRT", name: "IRLHBU3KKK", species: "ZXC8UM7QYW", status: "RG9H7H2NCE", type: "AQTFV4S2LU"}
    page: 66
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      image
      created
    }
  }
}
[INFO][2024-11-17 21:57:08][detector]:[200]Non-aliased Response: {"data":{"characters":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:08][detector]:Aliased Payload:
{
  s: characters(
    filter: {gender: "NF9ATESQS2", name: "92Q6E5BE76", species: "QMTJ6TVHRD", status: "0T91KQ5KMT", type: "FQKXQFLU7A"}
    page: 0
  ) {
    info {
      count
      pages
      next
      prev
    }
    results {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
  }
}
[INFO][2024-11-17 21:57:08][detector]:[200]Aliased Response: {"data":{"s":{"info":{"count":null,"pages":null,"next":null,"prev":null},"results":[]}}}
[INFO][2024-11-17 21:57:08][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[ERROR][2024-11-17 21:57:08][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:08][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:08][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:08][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:08][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:08][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:08][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:08][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:08][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:08][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:08][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:08][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:08][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:08][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:09][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:09][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:10][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:10][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Locations
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Episodes
[ERROR][2024-11-17 21:57:11][detector]:Detector OS Command Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Cross-Site Scripting (XSS) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SSRF Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector SQL Injection (SQLi) Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Path Injection failed with error: Could not find a value for the input name: ids in the object: Characters
[ERROR][2024-11-17 21:57:11][detector]:Detector Query deny bypass failed with error: Could not find a value for the input name: ids in the object: Characters
[INFO][2024-11-17 21:57:12][detector]:[Detector] Payload:
{
  character(id: "THB7ZE4ZGW") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:12][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:12][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:12][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:12][detector]:[Detector] Payload:
{
  character(id: "SZ83HREU4S") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:12][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/SZ83HREU4S","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:12][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/SZ83HREU4S', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:57:12][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:12][detector]:[Detector] Payload:
{
  character(id: "KLVA9UFZII") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:12][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/KLVA9UFZII","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:12][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/KLVA9UFZII', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:57:12][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:12][detector]:[Detector] Payload:
{
  character(id: "W37QKVQQU5") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          residents {
            id
            name
            status
            species
            type
            gender
            origin {
              id
              name
              type
              dimension
              residents {
                id
                name
                status
                species
                type
                gender
                origin {
                  id
                  name
                  type
                  dimension
                  residents {
                    id
                    name
                    status
                    species
                    type
                    gender
                    origin {
                      id
                      name
                      type
                      dimension
                      created
                    }
                    image
                    episode {
                      id
                      name
                      air_date
                      episode
                      created
                    }
                    created
                  }
                  created
                }
                image
                episode {
                  id
                  name
                  air_date
                  episode
                  created
                }
                created
              }
              created
            }
            image
            episode {
              id
              name
              air_date
              episode
              created
            }
            created
          }
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:13][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:13][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:13][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:13][detector]:[Detector] Payload:
{
  character(id: "58S9PT457M") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:13][detector]:[200]Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/58S9PT457M","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"58S9PT457M\" at path \"id\" for model \"Character\""}}}}]}
[INFO][2024-11-17 21:57:13][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['character'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/character/58S9PT457M', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "58S9PT457M" at path "id" for model "Character"'}}}}]
[INFO][2024-11-17 21:57:13][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:13][detector]:Non-aliased Payload:
{
  character(id: "XT2AEPB37G") {
    id
    name
    status
    species
    type
    gender
    image
    created
  }
}
[INFO][2024-11-17 21:57:13][detector]:[200]Non-aliased Response: {"data":{"character":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["character"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/XT2AEPB37G","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:13][detector]:Aliased Payload:
{
  s: character(id: "CWUC6VJA18") {
    id
    name
    status
    species
    type
    gender
    origin {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        location {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    location {
      id
      name
      type
      dimension
      residents {
        id
        name
        status
        species
        type
        gender
        origin {
          id
          name
          type
          dimension
          created
        }
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    image
    episode {
      id
      name
      air_date
      episode
      characters {
        id
        name
        status
        species
        type
        gender
        image
        episode {
          id
          name
          air_date
          episode
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:13][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/character/CWUC6VJA18","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:13][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:14][detector]:[Detector] Payload:
{
  episode(id: "WBSE4T8J0C") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:14][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:14][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:14][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:14][detector]:[Detector] Payload:
{
  episode(id: "3GE7QC6X5O") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:14][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/3GE7QC6X5O","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"3GE7QC6X5O\" at path \"id\" for model \"Episode\""}}}}]}
[INFO][2024-11-17 21:57:14][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/3GE7QC6X5O', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "3GE7QC6X5O" at path "id" for model "Episode"'}}}}]
[INFO][2024-11-17 21:57:14][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:14][detector]:[Detector] Payload:
{
  episode(id: "4GYOSLYYC5") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:14][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/4GYOSLYYC5","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"4GYOSLYYC5\" at path \"id\" for model \"Episode\""}}}}]}
[INFO][2024-11-17 21:57:14][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/4GYOSLYYC5', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "4GYOSLYYC5" at path "id" for model "Episode"'}}}}]
[INFO][2024-11-17 21:57:14][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:14][detector]:[Detector] Payload:
{
  episode(id: "68UJMILVYY") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      origin {
                        id
                        name
                        type
                        dimension
                        created
                      }
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:15][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:15][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:15][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:15][detector]:[Detector] Payload:
{
  episode(id: "YP77VIDONH") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:15][detector]:[200]Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/YP77VIDONH","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:15][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['episode'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/episode/YP77VIDONH', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:57:15][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:15][detector]:Non-aliased Payload:
{
  episode(id: "GG93VSS9EX") {
    id
    name
    air_date
    episode
    created
  }
}
[INFO][2024-11-17 21:57:15][detector]:[200]Non-aliased Response: {"data":{"episode":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["episode"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/GG93VSS9EX","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:15][detector]:Aliased Payload:
{
  s: episode(id: "ZL2O9HI037") {
    id
    name
    air_date
    episode
    characters {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:15][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/episode/ZL2O9HI037","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:15][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:16][detector]:[Detector] Payload:
{
  location(id: "TGW3S3767B") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:16][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:16][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:16][detector]:Detector OS Command Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:16][detector]:[Detector] Payload:
{
  location(id: "C9HIJBGC0R") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:16][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/C9HIJBGC0R","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:16][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/C9HIJBGC0R', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:57:16][detector]:Detector Cross-Site Scripting (XSS) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:16][detector]:[Detector] Payload:
{
  location(id: "PBJHJ9YSWO") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:16][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/PBJHJ9YSWO","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:16][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/PBJHJ9YSWO', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Hey! you must provide an id'}}}}]
[INFO][2024-11-17 21:57:16][detector]:Detector SSRF Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:16][detector]:[Detector] Payload:
{
  location(id: "B2LF7R43FX") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          origin {
            id
            name
            type
            dimension
            residents {
              id
              name
              status
              species
              type
              gender
              origin {
                id
                name
                type
                dimension
                residents {
                  id
                  name
                  status
                  species
                  type
                  gender
                  origin {
                    id
                    name
                    type
                    dimension
                    residents {
                      id
                      name
                      status
                      species
                      type
                      gender
                      image
                      episode {
                        id
                        name
                        air_date
                        episode
                        created
                      }
                      created
                    }
                    created
                  }
                  image
                  episode {
                    id
                    name
                    air_date
                    episode
                    created
                  }
                  created
                }
                created
              }
              image
              episode {
                id
                name
                air_date
                episode
                created
              }
              created
            }
            created
          }
          image
          episode {
            id
            name
            air_date
            episode
            created
          }
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:16][detector]:[413]Response: {"errors":[{"message":"Query depth limit exceeded.","extensions":{"code":"GCDN_QUERY_DEPTH_LIMIT","httpStatusCode":413}}]}
[INFO][2024-11-17 21:57:16][detector]:Got errors: [{'message': 'Query depth limit exceeded.', 'extensions': {'code': 'GCDN_QUERY_DEPTH_LIMIT', 'httpStatusCode': 413}}]
[INFO][2024-11-17 21:57:16][detector]:Detector SQL Injection (SQLi) Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:16][detector]:[Detector] Payload:
{
  location(id: "1SIV4JX1RU") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:17][detector]:[200]Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/1SIV4JX1RU","status":500,"statusText":"Internal Server Error","body":{"error":"Cast to Number failed for value \"1SIV4JX1RU\" at path \"id\" for model \"Location\""}}}}]}
[INFO][2024-11-17 21:57:17][detector]:Got errors: [{'message': '500: Internal Server Error', 'locations': [{'line': 2, 'column': 3}], 'path': ['location'], 'extensions': {'code': 'INTERNAL_SERVER_ERROR', 'response': {'url': 'http://localhost:8080/api/location/1SIV4JX1RU', 'status': 500, 'statusText': 'Internal Server Error', 'body': {'error': 'Cast to Number failed for value "1SIV4JX1RU" at path "id" for model "Location"'}}}}]
[INFO][2024-11-17 21:57:17][detector]:Detector Path Injection finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:17][detector]:Non-aliased Payload:
{
  location(id: "PZMMXF1LFK") {
    id
    name
    type
    dimension
    created
  }
}
[INFO][2024-11-17 21:57:17][detector]:[200]Non-aliased Response: {"data":{"location":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["location"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/PZMMXF1LFK","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:17][detector]:Aliased Payload:
{
  s: location(id: "ETACYSEPJ6") {
    id
    name
    type
    dimension
    residents {
      id
      name
      status
      species
      type
      gender
      origin {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      location {
        id
        name
        type
        dimension
        residents {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      image
      episode {
        id
        name
        air_date
        episode
        characters {
          id
          name
          status
          species
          type
          gender
          image
          created
        }
        created
      }
      created
    }
    created
  }
}
[INFO][2024-11-17 21:57:17][detector]:[200]Aliased Response: {"data":{"s":null},"errors":[{"message":"500: Internal Server Error","locations":[{"line":2,"column":3}],"path":["s"],"extensions":{"code":"INTERNAL_SERVER_ERROR","response":{"url":"http://localhost:8080/api/location/ETACYSEPJ6","status":500,"statusText":"Internal Server Error","body":{"error":"Hey! you must provide an id"}}}}]}
[INFO][2024-11-17 21:57:17][detector]:Detector Query deny bypass finished detecting - is_vulnerable: False - potentially_vulnerable: False
[INFO][2024-11-17 21:57:17][detector]:[Detector] Payload:
{
  __schema {
    queryType {
      name
    }
    mutationType {
      name
    }
    subscriptionType {
      name
    }
  }
}
[INFO][2024-11-17 21:57:17][detector]:[200]Response: {"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null}}}
[INFO][2024-11-17 21:57:17][detector]:Vulnerable to Introspection Enabled
[INFO][2024-11-17 21:57:17][detector]:Potentially vulnerable to Introspection Enabled
[INFO][2024-11-17 21:57:17][detector]:Detector Introspection Enabled finished detecting - is_vulnerable: True - potentially_vulnerable: True
[INFO][2024-11-17 21:57:17][detector]:[Detector] Payload:
{
  episodesByIdsabc {
    id
  }
}
[INFO][2024-11-17 21:57:18][detector]:[400]Response: {"errors":[{"message":"Cannot query field \"episodesByIdsabc\" on type \"Query\". Did you mean \"episodesByIds\" or \"episodes\"?","locations":[{"line":2,"column":3}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED"}}]}
[INFO][2024-11-17 21:57:18][detector]:Got errors: [{'message': 'Cannot query field "episodesByIdsabc" on type "Query". Did you mean "episodesByIds" or "episodes"?', 'locations': [{'line': 2, 'column': 3}], 'extensions': {'code': 'GRAPHQL_VALIDATION_FAILED'}}]
[INFO][2024-11-17 21:57:18][detector]:Vulnerable to Field Suggestions Enabled
[INFO][2024-11-17 21:57:18][detector]:Potentially vulnerable to Field Suggestions Enabled
[INFO][2024-11-17 21:57:18][detector]:Detector Field Suggestions Enabled finished detecting - is_vulnerable: True - potentially_vulnerable: True
